<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.best.emp.LoginDAO">
    <!-- 사용자 로그인 -->
    <select id="login" resultType="com.best.emp.EmployeeDTO">
        SELECT emp_idx, name, photo, email, password, depart_idx, rank_idx
        FROM employee
        WHERE emp_idx = #{id}
    </select>

    <!-- 비밀번호 업데이트 -->
    <update id="updatePassword" parameterType="map">
        UPDATE employee
        SET password = #{pw}
        WHERE emp_idx = #{id}
    </update>


	<!-- URL이 테이블에 등록되어 있는경우 URL 접근권한 체크 -->
	<select id="hasAccessToUrl" parameterType="map" resultType="int">
	    SELECT COUNT(DISTINCT a.url)
		FROM role rt
		JOIN access a ON rt.page_idx = a.page_idx
		WHERE a.url = #{url}
		  AND (
		      (rt.idx_name = 'depart_idx' AND rt.idx_num = #{departIdx})
		      OR (rt.idx_name = 'rank_idx' AND rt.idx_num = #{rankIdx})
		  )
	</select>
	
    <!-- URL이 access 테이블에 등록되어 있는지 체크 -->
	<select id="countUrl" parameterType="string" resultType="int">
	    SELECT COUNT(*)
	    FROM access
	    <where>
	        <if test="url != null and url != ''">
	            url = #{url}
	        </if>
	    </where>
	</select>


    <!-- 접근 가능한 URL 목록 조회 -->
    <select id="findAccessibleUrls" parameterType="map" resultType="string">
        SELECT DISTINCT a.url
        FROM role rt
        JOIN access a ON rt.page_idx = a.page_idx
        WHERE 
            (rt.idx_name = 'depart_idx' AND rt.idx_num = #{departIdx})
            OR (rt.idx_name = 'rank_idx' AND rt.idx_num = #{rankIdx})
    </select>
    
    
    <!-- 모든 URL 목록 가져오기 -->
	<select id="findAllUrls" resultType="string">
	    SELECT DISTINCT url
	    FROM access
	</select>
	
	
	
    <!-- 관리자 로그인 - 관리자 정보 가져오기 -->
    <select id="getAdminById" parameterType="string" resultType="com.best.emp.AdminDTO">
        SELECT id, password
        FROM admin
        WHERE id = #{id}
    </select>
	
	
	
	<select id="findByIdAndEmail" parameterType="map" resultType="com.best.emp.EmployeeDTO">
    SELECT emp_idx, email, password
    FROM employee
    WHERE emp_idx = #{empIdx} AND email = #{email}
</select>
	<update id="chagePassword">
    UPDATE employee 
    SET password = #{newPassword} 
    WHERE emp_idx = #{empIdx};
</update>

</mapper>  